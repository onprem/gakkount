// Code generated by entc, DO NOT EDIT.

package user

import (
	"fmt"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldHash holds the string denoting the hash field in the database.
	FieldHash = "hash"
	// FieldRole holds the string denoting the role field in the database.
	FieldRole = "role"
	// FieldPhoto holds the string denoting the photo field in the database.
	FieldPhoto = "photo"
	// FieldAltEmail holds the string denoting the altemail field in the database.
	FieldAltEmail = "alt_email"
	// FieldPhone holds the string denoting the phone field in the database.
	FieldPhone = "phone"
	// FieldSalutation holds the string denoting the salutation field in the database.
	FieldSalutation = "salutation"
	// FieldLinkedin holds the string denoting the linkedin field in the database.
	FieldLinkedin = "linkedin"
	// FieldTwitter holds the string denoting the twitter field in the database.
	FieldTwitter = "twitter"
	// FieldFacebook holds the string denoting the facebook field in the database.
	FieldFacebook = "facebook"
	// FieldGithub holds the string denoting the github field in the database.
	FieldGithub = "github"
	// FieldRollNo holds the string denoting the rollno field in the database.
	FieldRollNo = "roll_no"
	// FieldAdmissionTime holds the string denoting the admissiontime field in the database.
	FieldAdmissionTime = "admission_time"
	// FieldCourseEndTime holds the string denoting the courseendtime field in the database.
	FieldCourseEndTime = "course_end_time"
	// FieldDesignation holds the string denoting the designation field in the database.
	FieldDesignation = "designation"

	// EdgeCourse holds the string denoting the course edge name in mutations.
	EdgeCourse = "course"
	// EdgeDepartment holds the string denoting the department edge name in mutations.
	EdgeDepartment = "department"

	// Table holds the table name of the user in the database.
	Table = "users"
	// CourseTable is the table the holds the course relation/edge.
	CourseTable = "users"
	// CourseInverseTable is the table name for the Course entity.
	// It exists in this package in order to avoid circular dependency with the "course" package.
	CourseInverseTable = "courses"
	// CourseColumn is the table column denoting the course relation/edge.
	CourseColumn = "course_users"
	// DepartmentTable is the table the holds the department relation/edge.
	DepartmentTable = "users"
	// DepartmentInverseTable is the table name for the Department entity.
	// It exists in this package in order to avoid circular dependency with the "department" package.
	DepartmentInverseTable = "departments"
	// DepartmentColumn is the table column denoting the department relation/edge.
	DepartmentColumn = "department_users"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldEmail,
	FieldHash,
	FieldRole,
	FieldPhoto,
	FieldAltEmail,
	FieldPhone,
	FieldSalutation,
	FieldLinkedin,
	FieldTwitter,
	FieldFacebook,
	FieldGithub,
	FieldRollNo,
	FieldAdmissionTime,
	FieldCourseEndTime,
	FieldDesignation,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the User type.
var ForeignKeys = []string{
	"course_users",
	"department_users",
}

// Role defines the type for the role enum field.
type Role string

// RoleStudent is the default Role.
const DefaultRole = RoleStudent

// Role values.
const (
	RoleStudent Role = "student"
	RoleFaculty Role = "faculty"
	RoleStaff   Role = "staff"
	RoleAdmin   Role = "admin"
)

func (r Role) String() string {
	return string(r)
}

// RoleValidator is a validator for the "role" field enum values. It is called by the builders before save.
func RoleValidator(r Role) error {
	switch r {
	case RoleStudent, RoleFaculty, RoleStaff, RoleAdmin:
		return nil
	default:
		return fmt.Errorf("user: invalid enum value for role field: %q", r)
	}
}
